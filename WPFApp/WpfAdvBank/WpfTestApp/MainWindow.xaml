<Window x:Class="WpfTestApp.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:WpfTestApp"
        mc:Ignorable="d"
        Title="MainWindow" Height="450" Width="600" Initialized="Window_Initialized">
    <Window.Resources>
        <!-- 스타일 리소스 -->
        <Style TargetType="{x:Type TextBlock}">
            <Setter Property="Width" Value="150"/>
            <Setter Property="Background" Value="Silver"/>
            <Setter Property="HorizontalAlignment" Value="Center"/>
        </Style>

        <!-- 인스턴스(객체) 리소스 -->
        <!-- 인스턴스(객체) 생성 -->
        <local:PersonList x:Key="PersonListData">
            <!--<x:Arguments>
                <x:Double>0</x:Double>
                <x:Double>1.0</x:Double>
                <x:Double>0</x:Double>
            </x:Arguments>-->
            <!-- 객체 생성자 프로퍼티 넣는 방법 -->
        </local:PersonList>
        
        <!-- 인스턴스(객체) 생성 -->
        <!-- 빌드를 해야 인스턴스가 생성됨... -->
        <local:PersonConverter x:Key="PersonConverter"/>

        <!-- DataTemplate : 데이터 개체의 시각적 구조를 설명합니다 -->
        <DataTemplate x:Key="PersonListBoxTemplate">
            <StackPanel Orientation="Horizontal">
                <TextBlock Text="{Binding FirstName}"/>
                <TextBlock Text="{Binding LastName}" Margin="5,0,0,0"/>
            </StackPanel>
        </DataTemplate>
    </Window.Resources>
    <StackPanel HorizontalAlignment="Center">
        <!-- 잉크 캠버스 설정 -->
        <!--<InkCanvas EditingMode="Ink" Margin="10" Background="WhiteSmoke"></InkCanvas>-->
        <!--<Button Width="100" Height="40" Content="Click">
            <Button.Background>
                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                    <GradientStop Color="Black" Offset="0"/>
                    <GradientStop Color="White" Offset="1"/>
                </LinearGradientBrush>
            </Button.Background>
            <Button.BitmapEffect>
                <DropShadowBitmapEffect Direction="315" Color="#FFBDBABA"/>
                --><!--<OuterGlowBitmapEffect />--><!--
            </Button.BitmapEffect>
        </Button>-->
        <TextBlock
            FontSize="18" FontWeight="Bold" FontFamily="NanumGothic"
            Background="White"
            Width="Auto"
            Text="멀티바인딩 샘플"/>

        <ListBox 
            x:Name="LsbPerson"
            Width="200"
            FontSize="18" FontWeight="Bold" FontFamily="NanumGothic"
            IsSynchronizedWithCurrentItem="True"
            ItemsSource="{Binding Source={StaticResource PersonListData}}"
            ItemTemplate="{StaticResource ResourceKey=PersonListBoxTemplate}">
            <!-- 정적 리소스 참조 -->
            <!-- IsSynchronizedWithCurrentItem
            //     나타내는 값을 가져오거나 설정 합니다. 여부는 System.Windows.Controls.Primitives.Selector 유지 해야는
            //     System.Windows.Controls.Primitives.Selector.SelectedItem 의 현재 항목와 동기화는 System.Windows.Controls.ItemsControl.Items
            //     속성입니다.
            //
            // 반환 값:
            //     true 경우는 System.Windows.Controls.Primitives.Selector.SelectedItem 의 현재 항목 항상
            //     동기화는 System.Windows.Controls.ItemCollection; 
            //     false 경우는 System.Windows.Controls.Primitives.Selector.SelectedItem 현재 항목과 절대 동기화 되지 않음
            //     null 경우는 System.Windows.Controls.Primitives.Selector.SelectedItem
            //     는 현재 항목 경우에만와 동기화 되는 System.Windows.Controls.Primitives.Selector 사용하여는 System.Windows.Data.CollectionView합니다.
            //     기본값은 null입니다.
            -->
            <!-- ItemsSource : System.Windows.Controls.ItemsControl의 콘텐츠를 생성하는 데 사용되는 컬렉션을 가져오거나 설정합니다. -->
            <!-- ItemTemplate : 각 항목을 표시하는 데 사용되는 System.Windows.DataTemplate을 가져오거나 설정합니다. -->
        </ListBox>

        <TextBlock 
            Text="Normal Format" Background="White"
            Margin="0, 10, 0, 0" />
        <!-- DataContext : 데이터 바인딩에 참여할 때 요소에 대한 데이터 컨텍스트를 가져오거나 설정합니다. -->
        <TextBlock DataContext="{StaticResource PersonListData}">
            <TextBlock.Text>
                <!-- MultiBinding : 단일 바인딩 대상 속성에 연결된 System.Windows.Data.Binding 개체의 컬렉션을 설명합니다. -->
                <!-- 
                // Convert : 소스 값을 대상 값으로 변환하거나 그 반대로 변환하는 데 사용할 변환기를 가져오거나 설정합니다.
                // 반환 값 : 사용할 변환기를 나타내는 System.Windows.Data.IMultiValueConverter 형식의 값입니다. 기본값은 null입니다.
                -->
                <!-- ConvertParameter : 추가 정보로 변환기에 전달할 선택적 매개 변수를 가져오거나 설정합니다. -->
                <MultiBinding 
                    Converter="{StaticResource PersonConverter}"
                    ConverterParameter="FormatNormal">
                    <Binding Path="FirstName"/>
                    <Binding Path="LastName"/>
                </MultiBinding>
            </TextBlock.Text>
        </TextBlock>
        <TextBlock 
            Text="Reverse Format" Background="White"
            Margin="0, 10, 0, 0" />
        <TextBlock DataContext="{StaticResource PersonListData}">
            <TextBlock.Text>
                <!--<MultiBinding 
                    Converter="{StaticResource PersonConverter}"
                    ConverterParameter="FormatLastFirst">
                    <Binding Path="FirstName"/>-->
                    <Binding Path="LastName"/>
                <!-- 단일 바인딩으로 가져와도 됨 -->
                <!-- 멀티 바인딩 : Converter 필수! -->
                <!--</MultiBinding>-->
            </TextBlock.Text>
        </TextBlock>

    </StackPanel>
</Window>
